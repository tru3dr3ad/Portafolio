DROP VIEW V_CLIENTES;
DROP VIEW V_PRODUCTOS;
DROP VIEW V_PROVEEDORES;
DROP VIEW V_ORDEN_PEDIDO;
DROP VIEW V_BOLETAS;
DROP VIEW V_USUARIOS;
DROP VIEW V_ABONO;
DROP VIEW V_DETALLE_BOLETA;
DROP VIEW V_DETALLE_ORDEN;
DROP VIEW V_CLIENTES_EFECTIVO;
DROP VIEW V_TOP_PRODUCTOS;


CREATE OR REPLACE VIEW V_CLIENTES AS (
SELECT
    RUNCLIENTE AS "RUN",
    DV,
    NOMBRE||' '||APELLIDO AS "NOMBRE CLIENTE",
    FECHANACIMIENTO ,
    DIRECCION,
    TELEFONO,
    IDTIPO,
    T.DESCRIPCION AS "TIPO_CLIENTE",
    IDESTADO,
    E.DESCRIPCION AS "ESTADO_FIADO"
FROM CLIENTE C
JOIN TIPO_CLIENTE T
ON TIPO_CLIENTE_IDTIPO = IDTIPO
JOIN ESTADO_FIADO E
ON ESTADO_FIADO_IDESTADO = IDESTADO)
WITH READ ONLY;

CREATE OR REPLACE VIEW V_PRODUCTOS AS (
SELECT 
    CODIGO,
    NOMBRE,
    P.DESCRIPCION,
    PRECIOVENTA AS "PRECIO_VENTA",
    PRECIOCOMPRA AS "PRECIO_COMPRA",
    STOCK,
    STOCKCRITICO AS "STOCK_CRITICO",
    FECHAVENCIMIENTO AS "FECHA_VENCIMIENTO",
    C.IDCATEGORIA,
    C.DESCRIPCION AS "CATEGORIA"
FROM PRODUCTO P
JOIN CATEGORIA C
ON CATEGORIA_IDCATEGORIA = IDCATEGORIA);

CREATE OR REPLACE VIEW V_PROVEEDORES AS (
SELECT 
    RUT AS "RUT",
    DV,
    ID,
    NOMBRE,
    CORREO,
    TELEFONO,
    DIRECCION,
    IDRUBRO,
    R.DESCRIPCION AS "RUBRO"
FROM PROVEEDOR P
JOIN TIPO_RUBRO R
ON TIPO_RUBRO_IDRUBRO = IDRUBRO);

CREATE OR REPLACE VIEW V_ORDEN_PEDIDO AS (
SELECT
    NUMEROORDEN AS "NUMERO",
    O.FECHACREACION AS "FECHA_CREACION",
    TOTAL,
    FECHARECEPCION AS "FECHA_RECEPCION",
    PROVEEDOR_RUT,
    P.NOMBRE AS "PROVEEDOR",
    IDESTADO,
    E.DESCRIPCION AS "ESTADO_ORDEN",
    U.NOMBRE||' '|| U.APELLIDO AS "USUARIO"
FROM ORDEN_PEDIDO O
JOIN PROVEEDOR P
ON PROVEEDOR_RUT = RUT
JOIN ESTADO_ORDEN E
ON ESTADO_ORDEN_IDESTADO = IDESTADO
JOIN USUARIO U
ON USUARIO_RUNUSUARIO = RUNUSUARIO);

CREATE OR REPLACE VIEW V_BOLETAS AS (
SELECT 
    NUMEROBOLETA AS "NUMERO",
    B.FECHACREACION AS "FECHA_CREACION",
    TOTAL,
    M.IDMEDIO AS "IDMEDIOPAGO",
    M.DESCRIPCION AS "MEDIO_PAGO",
    RUNCLIENTE AS "RUN_CLIENTE",
    C.NOMBRE || ' '|| C.APELLIDO AS "NOMBRE_CLIENTE",
    RUNUSUARIO AS "RUN_USUARIO",
    U.NOMBRE||' '|| U.APELLIDO AS "NOMBRE_VENDEDOR",
    E.IDESTADO,
    E.DESCRIPCION
FROM BOLETA B
JOIN MEDIO_PAGO M
ON MEDIO_PAGO_IDMEDIO = IDMEDIO
JOIN CLIENTE C
ON CLIENTE_RUNCLIENTE = RUNCLIENTE
JOIN USUARIO U
ON USUARIO_RUNUSUARIO = RUNUSUARIO
JOIN ESTADO_BOLETA E
ON B.ESTADO_BOLETA_IDESTADO = E.IDESTADO);


CREATE OR REPLACE VIEW V_USUARIOS AS (
SELECT
    RUNUSUARIO AS "RUN",
    DV,
    NOMBRE||' '|| APELLIDO AS  "NOMBRE_USUARIO",
    CONTRASENA,
    FECHANACIMIENTO,
    FECHACREACION,
    DIRECCION AS "DIRECCION",
    TELEFONO AS "TELEFONO",
    CORREO,
    T.IDTIPO,
    T.DESCRIPCION
FROM USUARIO U
JOIN TIPO_USUARIO T
ON TIPO_USUARIO_IDTIPO = IDTIPO);

CREATE OR REPLACE VIEW V_ABONO AS (
SELECT
IDABONO,
BOLETA_NUMEROBOLETA,
TOTAL,
FECHAABONO,
FECHALIMITE
FROM ABONO);

CREATE OR REPLACE VIEW V_DETALLE_BOLETA AS (
SELECT 
IDDETALLEB,
BOLETA_NUMEROBOLETA,
PRODUCTO_CODIGO,
P.NOMBRE,
CANTIDAD,
P.PRECIOVENTA * CANTIDAD AS "TOTAL"
FROM DETALLE_BOLETA D
JOIN PRODUCTO P
ON D.PRODUCTO_CODIGO = P.CODIGO);

CREATE OR REPLACE VIEW V_DETALLE_ORDEN AS (
SELECT 
IDDETALLEO,
ORDEN_PEDIDO_NUMEROORDEN,
PRODUCTO_CODIGO,
P.NOMBRE,
CANTIDAD,
P.PRECIOCOMPRA * CANTIDAD AS "TOTAL"
FROM DETALLE_PEDIDO D
JOIN PRODUCTO P
ON D.PRODUCTO_CODIGO = P.CODIGO);

CREATE OR REPLACE VIEW V_CLIENTES_EFECTIVO AS (
SELECT 
C.NOMBRE,
C.APELLIDO,
B.FECHACREACION,
B.TOTAL,
M.DESCRIPCION
FROM BOLETA B
JOIN MEDIO_PAGO M
ON M.IDMEDIO = B.MEDIO_PAGO_IDMEDIO
JOIN CLIENTE C
ON C.RUNCLIENTE = B.CLIENTE_RUNCLIENTE
WHERE M.DESCRIPCION = 'EFECTIVO');


CREATE OR REPLACE VIEW V_TOP_PRODUCTOS AS (
SELECT 
P.NOMBRE,
P.DESCRIPCION,
P.PRECIOVENTA,
SUM(D.CANTIDAD) AS "CANTIDAD"
FROM DETALLE_BOLETA D
JOIN PRODUCTO P
ON D.PRODUCTO_CODIGO = P.CODIGO
GROUP BY P.NOMBRE,P.PRECIOVENTA, P.DESCRIPCION
ORDER BY "CANTIDAD" DESC
FETCH NEXT 3 ROWS ONLY)
;

CREATE OR REPLACE TRIGGER TRG_DESCONTAR_STOCK
     AFTER INSERT ON DETALLE_BOLETA FOR EACH ROW
DECLARE
BEGIN 
    UPDATE PRODUCTO SET STOCK = STOCK - :NEW.CANTIDAD WHERE CODIGO = :NEW.PRODUCTO_CODIGO;
END;
/

CREATE OR REPLACE PROCEDURE SP_MONEDA_CAMBIO
    (NOMBRE_MONEDA IN VARCHAR2,VALOR IN NUMBER)
AS 
BEGIN
    IF NOMBRE_MONEDA='CLP' THEN
        UPDATE PRODUCTO SET PRECIOVENTA = ROUND((PRECIOVENTA*VALOR),1);
        UPDATE PRODUCTO SET PRECIOCOMPRA = ROUND((PRECIOCOMPRA*VALOR),1);
        UPDATE BOLETA SET TOTAL = ROUND((TOTAL*VALOR),1);
        UPDATE ORDEN_PEDIDO SET TOTAL = ROUND((TOTAL*VALOR),1);
        UPDATE ABONO SET TOTAL = ROUND((TOTAL*VALOR),1);
    ELSIF NOMBRE_MONEDA='USD' THEN
        UPDATE PRODUCTO SET PRECIOVENTA = ROUND((PRECIOVENTA/VALOR),4);
        UPDATE PRODUCTO SET PRECIOCOMPRA = ROUND((PRECIOCOMPRA/VALOR),4);
        UPDATE BOLETA SET TOTAL = ROUND((TOTAL/VALOR),4);
        UPDATE ORDEN_PEDIDO SET TOTAL = ROUND((TOTAL/VALOR),4);
        UPDATE ABONO SET TOTAL = ROUND((TOTAL/VALOR),4);
    END IF;  
END;
/



ALTER USER ALMACEN DEFAULT TABLESPACE USERS QUOTA UNLIMITED ON USERS;


CREATE OR REPLACE PROCEDURE SP_LISTAR_PRODUCTOS(PRODUCTOS OUT SYS_REFCURSOR)
IS

BEGIN
    OPEN PRODUCTOS FOR SELECT CODIGO, NOMBRE, DESCRIPCION, PRECIOVENTA FROM PRODUCTO WHERE STOCKCRITICO>0;

END;
/


